  name: CI
  on:
    workflow_dispatch:
    push:
      branches:
        - main
  jobs:
    build:
      runs-on: ubuntu-latest
      env:
        GOOS: linux
        GOARCH: amd64
      steps:
        - uses: actions/checkout@v4

        - name: Setup Go
          uses: actions/setup-go@v4
          with:
            go-version: 1.21.x
            cache: false

        - name: Get Go cached paths
          run: |
            echo "cache=$(go env GOCACHE)" >> $GITHUB_ENV
            echo "modcache=$(go env GOMODCACHE)" >> $GITHUB_ENV

        - name: Set up dependencies cache
          uses: actions/cache@v3
          with:
            path: |
              ${{ env.cache }}
            key: setup-go-deps-${{ runner.os }}-go-${{ hashFiles('go.sum', 'go.mod') }}

        - run: echo "$GOOS $GOARCH" > env.txt

        - name: Set up intermediate built files cache
          uses: actions/cache@v3
          with:
            path: |
              ${{ env.modcache }}
            key: setup-go-build-${{ env.GOOS }}-${{ env.GOARCH }}-${{ runner.os }}-go-${{ hashFiles('**/*.go', 'env.txt') }}
            restore-keys: |
              setup-go-build-${{ env.GOOS }}-${{ env.GOARCH }}-${{ runner.os }}-go

        - name: Build Linux binary
          run:  go build

        - name: Build & tar docker image
          if: ${{ true }}
          run: |
            docker build -t az-appservice-go .
            docker save az-appservice-go |gzip > az-appservice-go.tar.gz

        - name: Upload artifact
          uses: actions/upload-artifact@v3
          with:
            name: docker-image
            path: az-appservice-go.tar.gz

    choose-registry:
      needs: [build]
      runs-on: ubuntu-latest
      outputs:
        registry: ${{ steps.choose.outputs.registry }}
      steps:
        - name: Choose container registry
          id: choose
          run: echo "registry=${{ secrets.REGISTRY }}" >> $GITHUB_OUTPUT

    publish-to-registry:
      needs: [choose-registry]
      runs-on: ubuntu-latest
      
      steps:
        - name: Download artifact
          uses: actions/download-artifact@v3
          with:
            name: docker-image
            
        - name: Unar docker image
          run: |
            gunzip -c az-appservice-go.tar.gz| docker load
            docker images

        - name: Publish to Docker Hub
          if: needs.choose-registry.outputs.registry == 'dockerhub'
          run: |
            docker tag az-appservice-go ${{ secrets.DOCKER_USERNAME }}/az-appservice-go
            docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }}
            docker push ${{ secrets.DOCKER_USERNAME }}/az-appservice-go

    deplpoy-to-azure-from-dockerhub:
      if: needs.choose-registry.outputs.registry == 'dockerhub'
      needs: [publish-to-registry, choose-registry]
      runs-on: ubuntu-latest

      steps:
        - name: Deploy to Azure Web App from docker hub
          
          uses: azure/webapps-deploy@v2
          with:
            app-name: akv-demo-go
            publish-profile: ${{ secrets.AZ_PROFILE }}
      
